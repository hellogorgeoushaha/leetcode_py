class Solution(object):
    def letterCombinations(self, digits):
        """
        :type digits: str
        :rtype: List[str]
        """
        dic = {2: ['a', 'b', 'c'],
               3: ['d', 'e', 'f'],
               4: ['g', 'h', 'i'],
               5: ['j', 'k', 'l'],
               6: ['m', 'n', 'o'],
               7: ['p', 'q', 'r', 's'],
               8: ['t', 'u', 'v'],
               9: ['w', 'x', 'y', 'z'],
               }

        ret_str = []
        if len(digits) == 0: return []
        
        if len(digits) == 1:
            return dic[int(digits[0])]
        
        result = self.letterCombinations(digits[1:])
        
        for r in result:
            for j in dic[int(digits[0])]:
                ret_str.append(j + r)
        return ret_str

#dfs
