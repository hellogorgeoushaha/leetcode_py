class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        length = len(nums)
        if length == 0:
            return -1
        left = 0 
        right = length-1
        mid = (left+right)//2
        rot = -1
        while left <= right:
            mid = (left+right)//2
            if mid != length -1 and nums[mid] > nums[mid+1]:
                rot = mid+1
                break
            elif nums[mid] < nums[left]:
                right = mid-1
            else:
                left = mid+1
        
        #print(rot)
        res = -1
        if rot == -1:
            low = 0
            high = length - 1 
        elif target < nums[0]:
            low = rot 
            high = length - 1
        else:
            low = 0
            high = rot - 1
            
        while low <= high:
            mid = (low+high)//2
            if nums[mid] == target:
                return mid
            elif nums[mid] < target:
                low = mid + 1
            else:
                high = mid - 1
            
        return -1
                
