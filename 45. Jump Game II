class Solution(object):
    def jump(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        cnt = 0
        if len(nums) == 1:
            return cnt
        p = 0
        
        
        while p < len(nums):
            step = nums[p]
            if p == len(nums)-1:
                break
            if p + step >= len(nums) - 1:
                cnt += 1
                break
            
            avail = nums[p+1:p+step+1]
            temp = p
            pos = -1
            for i in range(step):
                if avail[i]+p+i+1 >= len(nums)-1:
                    return cnt+2
                if avail[i]+p+i+1 > temp:
                    temp = avail[i]+p+i+1
                    pos = i
            p += pos+1
            cnt += 1
        return cnt
