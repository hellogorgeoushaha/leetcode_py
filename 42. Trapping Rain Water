class Solution(object):
    def trap(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        ans = 0
        left = [0]*len(height)
        right = [0]*len(height)
        for i in range(1, len(height)):
            left[i] = max(left[i-1], height[i-1])
        for i in range(len(height)-2, -1, -1):
            right[i] = max(right[i+1], height[i+1])
        
        for i in range(len(height)):
            level = min(left[i], right[i])
            ans += max(0, level-height[i])
        return ans
        
        # consider the highest pillar from both sides
